// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package cms is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Data
	Request
	Response
*/
package cms

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Data) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Data) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Request struct {
	// repeated Data data = 1;
	Data *Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids" json:"ids,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*Data)(nil), "cms.Data")
	proto.RegisterType((*Request)(nil), "cms.Request")
	proto.RegisterType((*Response)(nil), "cms.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DataService service

type DataServiceClient interface {
	// A simple RPC.
	GetData(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type dataServiceClient struct {
	cc *grpc.ClientConn
}

func NewDataServiceClient(cc *grpc.ClientConn) DataServiceClient {
	return &dataServiceClient{cc}
}

func (c *dataServiceClient) GetData(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/cms.DataService/GetData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataService service

type DataServiceServer interface {
	// A simple RPC.
	GetData(context.Context, *Request) (*Response, error)
}

func RegisterDataServiceServer(s *grpc.Server, srv DataServiceServer) {
	s.RegisterService(&_DataService_serviceDesc, srv)
}

func _DataService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cms.DataService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataServiceServer).GetData(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cms.DataService",
	HandlerType: (*DataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _DataService_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0xc1, 0x8e, 0x82, 0x30,
	0x10, 0x86, 0xb7, 0x94, 0x5d, 0x96, 0x61, 0xd9, 0x98, 0xc6, 0x03, 0x31, 0x9a, 0x90, 0x9e, 0x7a,
	0x30, 0x1c, 0xf0, 0xe0, 0x0b, 0x98, 0x78, 0xaf, 0x4f, 0x50, 0xe9, 0x1c, 0x1a, 0x03, 0x45, 0xa6,
	0xfa, 0xfc, 0x86, 0xc2, 0x6d, 0xfe, 0xc9, 0xcc, 0xf7, 0x7f, 0x50, 0x12, 0x4e, 0x6f, 0xd7, 0x61,
	0x33, 0x4e, 0x3e, 0x78, 0xc1, 0xbb, 0x9e, 0xe4, 0x11, 0xd2, 0x8b, 0x09, 0x46, 0xfc, 0x43, 0xe2,
	0x6c, 0xc5, 0x6a, 0xa6, 0xb8, 0x4e, 0x9c, 0x15, 0x5b, 0xf8, 0x0e, 0xfe, 0x81, 0x43, 0x95, 0xd4,
	0x4c, 0xe5, 0x7a, 0x09, 0x52, 0x41, 0xa6, 0xf1, 0xf9, 0x42, 0x0a, 0xe2, 0x00, 0xa9, 0x35, 0xc1,
	0xc4, 0x97, 0xa2, 0xcd, 0x9b, 0xae, 0xa7, 0x66, 0x26, 0xe9, 0xb8, 0x96, 0x7b, 0xf8, 0xd5, 0x48,
	0xa3, 0x1f, 0x08, 0xc5, 0x06, 0xb8, 0xb3, 0x54, 0xb1, 0x9a, 0x2b, 0xae, 0xe7, 0xb1, 0x3d, 0x43,
	0x31, 0xdf, 0xde, 0x16, 0x1f, 0xa1, 0x20, 0xbb, 0x62, 0x88, 0x1e, 0x7f, 0x11, 0xb4, 0x96, 0xec,
	0xca, 0x35, 0x2d, 0x20, 0xf9, 0x75, 0xff, 0x89, 0xea, 0xa7, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x71, 0x3a, 0xc0, 0xb2, 0xcb, 0x00, 0x00, 0x00,
}
